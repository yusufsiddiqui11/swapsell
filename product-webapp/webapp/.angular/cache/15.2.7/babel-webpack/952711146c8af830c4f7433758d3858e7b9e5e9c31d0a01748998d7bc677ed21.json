{"ast":null,"code":"import { of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./user.service\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, userService) {\n      this.http = http;\n      this.userService = userService;\n      this.URL = \"http://localhost:8080/login\";\n      this.isLoggedIn = false;\n      this.jwt = \"\";\n      this.message = \"\";\n    }\n    getStatus() {\n      return of(this.isLoggedIn);\n    }\n    login(user) {\n      return this.http.post(this.URL, user).pipe(map(data => {\n        console.log(data);\n        let json = JSON.stringify(data);\n        this.jwt = JSON.parse(json).token;\n        this.message = JSON.parse(json).message;\n        let email = JSON.parse(json).email;\n        console.log(this.jwt, this.message);\n        sessionStorage.setItem(\"jwt\", this.jwt);\n        sessionStorage.setItem(\"message\", this.message);\n        if (this.message === \"Login Successful\") {\n          this.isLoggedIn = true;\n          // fetching user data on successful login\n          this.userService.fetchUser(email);\n        } else {\n          this.isLoggedIn = false;\n        }\n        return this.isLoggedIn;\n      }));\n    }\n    logout() {\n      this.isLoggedIn = false;\n      this.userService.removeUser();\n    }\n  }\n  AuthService.ɵfac = function AuthService_Factory(t) {\n    return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.UserService));\n  };\n  AuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthService,\n    factory: AuthService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}