{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { HttpParams } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      // url to fetch a chat between 2 participants \n      this.URL = \"http://localhost:8081/swapsell/api\";\n      this.participantId1 = \"1234\"; // get this from auth service later (logged user id) \n      this.userSubject = new BehaviorSubject(null);\n      this.user$ = this.userSubject.asObservable();\n    }\n    // fetch user data \n    fetchUser(email) {\n      this.http.get(\"http://localhost:8080/user/\" + email).subscribe(data => {\n        console.log(\"user data\", data);\n        this.userSubject.next(data);\n      });\n    }\n    renoveUser() {\n      this.userSubject.next({});\n    }\n    // fetch all users who have contacted logged in user  \n    getUsers() {\n      const params = new HttpParams().set('participantId', this.participantId1);\n      return this.http.get(`${this.URL}/chats/users`, {\n        params\n      });\n    }\n    // fetch chat between 2 users\n    getChat(participantId2) {\n      const params = new HttpParams().set('participantId1', this.participantId1).set('participantId2', participantId2);\n      return this.http.get(`${this.URL}/chats`, {\n        params\n      });\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}