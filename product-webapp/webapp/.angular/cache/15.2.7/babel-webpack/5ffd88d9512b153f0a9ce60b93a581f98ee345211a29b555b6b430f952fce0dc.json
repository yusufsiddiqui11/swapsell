{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/material/icon\";\nimport * as i4 from \"@angular/material/toolbar\";\nimport * as i5 from \"@angular/material/sidenav\";\nimport * as i6 from \"@angular/material/list\";\nimport * as i7 from \"@angular/common\";\nexport let MainHeaderComponent = /*#__PURE__*/(() => {\n  class MainHeaderComponent {\n    constructor(breakpointObserver) {\n      this.breakpointObserver = breakpointObserver;\n      this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n    }\n  }\n  MainHeaderComponent.ɵfac = function MainHeaderComponent_Factory(t) {\n    return new (t || MainHeaderComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n  };\n  MainHeaderComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MainHeaderComponent,\n    selectors: [[\"app-main-header\"]],\n    decls: 22,\n    vars: 9,\n    consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-list-item\", \"\", \"href\", \"#\"], [\"color\", \"primary\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n    template: function MainHeaderComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2);\n        i0.ɵɵpipe(3, \"async\");\n        i0.ɵɵpipe(4, \"async\");\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementStart(6, \"mat-toolbar\");\n        i0.ɵɵtext(7, \"Menu\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"mat-nav-list\")(9, \"a\", 3);\n        i0.ɵɵtext(10, \"Link 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"a\", 3);\n        i0.ɵɵtext(12, \"Link 2\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"a\", 3);\n        i0.ɵɵtext(14, \"Link 3\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(15, \"mat-sidenav-content\")(16, \"mat-toolbar\", 4)(17, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function MainHeaderComponent_Template_button_click_17_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(2);\n          return i0.ɵɵresetView(_r0.toggle());\n        });\n        i0.ɵɵelementStart(18, \"mat-icon\", 6);\n        i0.ɵɵtext(19, \"menu\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"span\");\n        i0.ɵɵtext(21, \"webapp\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mode\", i0.ɵɵpipeBind1(4, 5, ctx.isHandset$) ? \"over\" : \"side\")(\"opened\", i0.ɵɵpipeBind1(5, 7, ctx.isHandset$) === false);\n        i0.ɵɵattribute(\"role\", i0.ɵɵpipeBind1(3, 3, ctx.isHandset$) ? \"dialog\" : \"navigation\");\n      }\n    },\n    dependencies: [i2.MatIconButton, i3.MatIcon, i4.MatToolbar, i5.MatSidenav, i5.MatSidenavContainer, i5.MatSidenavContent, i6.MatNavList, i6.MatListItem, i7.AsyncPipe],\n    styles: [\".sidenav-container[_ngcontent-%COMP%]{height:100%}.sidenav[_ngcontent-%COMP%]{width:200px}.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%]{background:inherit}.mat-toolbar.mat-primary[_ngcontent-%COMP%]{position:sticky;top:0;z-index:1}\"]\n  });\n  return MainHeaderComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}