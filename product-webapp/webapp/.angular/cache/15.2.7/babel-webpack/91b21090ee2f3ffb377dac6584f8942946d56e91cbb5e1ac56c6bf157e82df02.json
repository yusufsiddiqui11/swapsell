{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(http) {\n      this.http = http;\n      this.productsSubject = new BehaviorSubject([]);\n      this.products$ = this.productsSubject.asObservable();\n      this.URL = \"http://localhost:9090/products\";\n    }\n    // fetch all products\n    fetchProducts() {\n      this.http.get(this.URL).subscribe(products => {\n        this.productsSubject.next(products);\n      }, error => {\n        console.error('Error fetching products:', error);\n      });\n    }\n    // returns a single product by id \n    getProductById(productId) {\n      console.log(productId);\n      return this.products$.pipe(map(products => products.find(product => product.id == productId)));\n    }\n  }\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}