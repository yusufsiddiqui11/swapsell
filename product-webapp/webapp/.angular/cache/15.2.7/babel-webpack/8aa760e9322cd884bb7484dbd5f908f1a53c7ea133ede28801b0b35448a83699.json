{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/user.service\";\nimport * as i2 from \"../header/header.component\";\nimport * as i3 from \"../chat-menu/chat-menu.component\";\nimport * as i4 from \"../chat-message/chat-message.component\";\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(userService) {\n      this.userService = userService;\n      this.participantId1 = \"\"; // id of logged user \n      this.participantId2 = \"\"; // id of other user \n    }\n\n    ngOnInit() {\n      this.userService.user$.subscribe(data => {\n        console.log(\"userId\", data.id);\n        this.participantId1 = data.id;\n      });\n    }\n    receiveId(id) {\n      this.participantId1 = id;\n    }\n  }\n  ChatComponent.ɵfac = function ChatComponent_Factory(t) {\n    return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.UserService));\n  };\n  ChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChatComponent,\n    selectors: [[\"app-chat\"]],\n    decls: 5,\n    vars: 2,\n    consts: [[1, \"chat\"], [1, \"chat__content\"], [3, \"participantId1\", \"participantId\"], [3, \"participantId\"]],\n    template: function ChatComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"app-header\");\n        i0.ɵɵelementStart(2, \"div\", 1)(3, \"app-chat-menu\", 2);\n        i0.ɵɵlistener(\"participantId\", function ChatComponent_Template_app_chat_menu_participantId_3_listener($event) {\n          return ctx.receiveId($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"app-chat-message\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"participantId1\", ctx.participantId1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"participantId\", ctx.participantId1);\n      }\n    },\n    dependencies: [i2.HeaderComponent, i3.ChatMenuComponent, i4.ChatMessageComponent],\n    styles: [\".chat__content[_ngcontent-%COMP%]{display:grid;grid-template-columns:1fr;height:100%}@media screen and (min-width: 576px){.chat__content[_ngcontent-%COMP%]{grid-template-columns:300px 1fr}}.chat__content[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]:nth-child(1){display:none}@media screen and (min-width: 576px){.chat__content[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]:nth-child(1){display:block}}\"]\n  });\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}