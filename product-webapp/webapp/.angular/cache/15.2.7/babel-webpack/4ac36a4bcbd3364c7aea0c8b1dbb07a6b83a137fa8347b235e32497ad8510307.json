{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/input\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/radio\";\nimport * as i9 from \"@angular/material/select\";\nimport * as i10 from \"@angular/material/core\";\nfunction UpdateUserDataComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" First name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateUserDataComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Last name is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateUserDataComponent_mat_error_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" phone number is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateUserDataComponent_mat_error_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Address is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateUserDataComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7)(2, \"mat-form-field\", 8);\n    i0.ɵɵelement(3, \"textarea\", 27);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction UpdateUserDataComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" City is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UpdateUserDataComponent_mat_option_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const state_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", state_r9.abbreviation);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", state_r9.name, \" \");\n  }\n}\nfunction UpdateUserDataComponent_mat_error_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" State is \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"required\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let UpdateUserDataComponent = /*#__PURE__*/(() => {\n  class UpdateUserDataComponent {\n    constructor(fb) {\n      this.fb = fb;\n      this.addressForm = this.fb.group({\n        company: null,\n        firstName: [null, Validators.required],\n        lastName: [null, Validators.required],\n        address: [null, Validators.required],\n        phone: null,\n        city: [null, Validators.required],\n        state: [null, Validators.required],\n        postalCode: [null, Validators.compose([Validators.required, Validators.minLength(5), Validators.maxLength(5)])],\n        gender: ['free', Validators.required]\n      });\n      this.hasUnitNumber = false;\n      this.states = [{\n        name: 'Alabama',\n        abbreviation: 'AL'\n      }, {\n        name: 'Alaska',\n        abbreviation: 'AK'\n      }, {\n        name: 'American Samoa',\n        abbreviation: 'AS'\n      }, {\n        name: 'Arizona',\n        abbreviation: 'AZ'\n      }, {\n        name: 'Arkansas',\n        abbreviation: 'AR'\n      }, {\n        name: 'California',\n        abbreviation: 'CA'\n      }, {\n        name: 'Colorado',\n        abbreviation: 'CO'\n      }, {\n        name: 'Connecticut',\n        abbreviation: 'CT'\n      }, {\n        name: 'Delaware',\n        abbreviation: 'DE'\n      }, {\n        name: 'District Of Columbia',\n        abbreviation: 'DC'\n      }, {\n        name: 'Federated States Of Micronesia',\n        abbreviation: 'FM'\n      }, {\n        name: 'Florida',\n        abbreviation: 'FL'\n      }, {\n        name: 'Georgia',\n        abbreviation: 'GA'\n      }, {\n        name: 'Guam',\n        abbreviation: 'GU'\n      }, {\n        name: 'Hawaii',\n        abbreviation: 'HI'\n      }, {\n        name: 'Idaho',\n        abbreviation: 'ID'\n      }, {\n        name: 'Illinois',\n        abbreviation: 'IL'\n      }, {\n        name: 'Indiana',\n        abbreviation: 'IN'\n      }, {\n        name: 'Iowa',\n        abbreviation: 'IA'\n      }, {\n        name: 'Kansas',\n        abbreviation: 'KS'\n      }, {\n        name: 'Kentucky',\n        abbreviation: 'KY'\n      }, {\n        name: 'Louisiana',\n        abbreviation: 'LA'\n      }, {\n        name: 'Maine',\n        abbreviation: 'ME'\n      }, {\n        name: 'Marshall Islands',\n        abbreviation: 'MH'\n      }, {\n        name: 'Maryland',\n        abbreviation: 'MD'\n      }, {\n        name: 'Massachusetts',\n        abbreviation: 'MA'\n      }, {\n        name: 'Michigan',\n        abbreviation: 'MI'\n      }, {\n        name: 'Minnesota',\n        abbreviation: 'MN'\n      }, {\n        name: 'Mississippi',\n        abbreviation: 'MS'\n      }, {\n        name: 'Missouri',\n        abbreviation: 'MO'\n      }, {\n        name: 'Montana',\n        abbreviation: 'MT'\n      }, {\n        name: 'Nebraska',\n        abbreviation: 'NE'\n      }, {\n        name: 'Nevada',\n        abbreviation: 'NV'\n      }, {\n        name: 'New Hampshire',\n        abbreviation: 'NH'\n      }, {\n        name: 'New Jersey',\n        abbreviation: 'NJ'\n      }, {\n        name: 'New Mexico',\n        abbreviation: 'NM'\n      }, {\n        name: 'New York',\n        abbreviation: 'NY'\n      }, {\n        name: 'North Carolina',\n        abbreviation: 'NC'\n      }, {\n        name: 'North Dakota',\n        abbreviation: 'ND'\n      }, {\n        name: 'Northern Mariana Islands',\n        abbreviation: 'MP'\n      }, {\n        name: 'Ohio',\n        abbreviation: 'OH'\n      }, {\n        name: 'Oklahoma',\n        abbreviation: 'OK'\n      }, {\n        name: 'Oregon',\n        abbreviation: 'OR'\n      }, {\n        name: 'Palau',\n        abbreviation: 'PW'\n      }, {\n        name: 'Pennsylvania',\n        abbreviation: 'PA'\n      }, {\n        name: 'Puerto Rico',\n        abbreviation: 'PR'\n      }, {\n        name: 'Rhode Island',\n        abbreviation: 'RI'\n      }, {\n        name: 'South Carolina',\n        abbreviation: 'SC'\n      }, {\n        name: 'South Dakota',\n        abbreviation: 'SD'\n      }, {\n        name: 'Tennessee',\n        abbreviation: 'TN'\n      }, {\n        name: 'Texas',\n        abbreviation: 'TX'\n      }, {\n        name: 'Utah',\n        abbreviation: 'UT'\n      }, {\n        name: 'Vermont',\n        abbreviation: 'VT'\n      }, {\n        name: 'Virgin Islands',\n        abbreviation: 'VI'\n      }, {\n        name: 'Virginia',\n        abbreviation: 'VA'\n      }, {\n        name: 'Washington',\n        abbreviation: 'WA'\n      }, {\n        name: 'West Virginia',\n        abbreviation: 'WV'\n      }, {\n        name: 'Wisconsin',\n        abbreviation: 'WI'\n      }, {\n        name: 'Wyoming',\n        abbreviation: 'WY'\n      }];\n    }\n    onSubmit() {\n      alert('Thanks!');\n    }\n  }\n  UpdateUserDataComponent.ɵfac = function UpdateUserDataComponent_Factory(t) {\n    return new (t || UpdateUserDataComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n  };\n  UpdateUserDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateUserDataComponent,\n    selectors: [[\"app-update-user-data\"]],\n    decls: 73,\n    vars: 10,\n    consts: [[1, \"user-update\"], [\"id\", \"card-1\"], [\"id\", \"card1-image\", \"src\", \"../../../../../assets/update-profile.png\", \"alt\", \"\"], [\"id\", \"image-card-para\"], [\"novalidate\", \"\", 3, \"formGroup\", \"ngSubmit\"], [1, \"shipping-card\"], [1, \"row\"], [1, \"col\"], [1, \"full-width\"], [\"matInput\", \"\", \"placeholder\", \"First name\", \"formControlName\", \"firstName\"], [4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"Last name\", \"formControlName\", \"lastName\"], [\"matInput\", \"\", \"placeholder\", \"phone number\", \"formControlName\", \"contact\"], [\"matInput\", \"\", \"placeholder\", \"Address\", \"formControlName\", \"address\"], [\"class\", \"row\", 4, \"ngIf\"], [\"matInput\", \"\", \"placeholder\", \"City\", \"formControlName\", \"city\"], [\"placeholder\", \"State\", \"formControlName\", \"state\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"maxlength\", \"5\", \"placeholder\", \"Postal Code\", \"type\", \"number\", \"formControlName\", \"postalCode\"], [\"postalCode\", \"\"], [\"align\", \"end\"], [\"formControlName\", \"gender\"], [\"value\", \"Male\"], [\"value\", \"Female\"], [\"value\", \"Other\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"routerLink\", \"userDashBoard\"], [\"matInput\", \"\", \"placeholder\", \"Address 2\", \"formControlName\", \"address2\"], [3, \"value\"]],\n    template: function UpdateUserDataComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelement(2, \"img\", 2);\n        i0.ɵɵelementStart(3, \"p\", 3);\n        i0.ɵɵelement(4, \"br\")(5, \"br\");\n        i0.ɵɵtext(6, \" barter-enabled platform\");\n        i0.ɵɵelement(7, \"br\")(8, \"br\");\n        i0.ɵɵtext(9, \" for buying and selling \");\n        i0.ɵɵelement(10, \"br\")(11, \"br\");\n        i0.ɵɵtext(12, \" second-hand goods\");\n        i0.ɵɵelement(13, \"br\")(14, \"br\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(15, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function UpdateUserDataComponent_Template_form_ngSubmit_15_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(16, \"mat-card\", 5)(17, \"mat-card-header\")(18, \"mat-card-title\");\n        i0.ɵɵtext(19, \"update your information\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"mat-card-content\")(21, \"div\", 6)(22, \"div\", 7)(23, \"mat-form-field\", 8);\n        i0.ɵɵelement(24, \"input\", 9);\n        i0.ɵɵtemplate(25, UpdateUserDataComponent_mat_error_25_Template, 4, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(26, \"div\", 7)(27, \"mat-form-field\", 8);\n        i0.ɵɵelement(28, \"input\", 11);\n        i0.ɵɵtemplate(29, UpdateUserDataComponent_mat_error_29_Template, 4, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(30, \"div\", 6)(31, \"div\", 7)(32, \"mat-form-field\", 8);\n        i0.ɵɵelement(33, \"input\", 12);\n        i0.ɵɵtemplate(34, UpdateUserDataComponent_mat_error_34_Template, 4, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 6)(36, \"div\", 7)(37, \"mat-form-field\", 8);\n        i0.ɵɵelement(38, \"textarea\", 13);\n        i0.ɵɵtemplate(39, UpdateUserDataComponent_mat_error_39_Template, 4, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(40, UpdateUserDataComponent_div_40_Template, 4, 0, \"div\", 14);\n        i0.ɵɵelementStart(41, \"div\", 6)(42, \"div\", 7)(43, \"mat-form-field\", 8);\n        i0.ɵɵelement(44, \"input\", 15);\n        i0.ɵɵtemplate(45, UpdateUserDataComponent_mat_error_45_Template, 4, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(46, \"div\", 7)(47, \"mat-form-field\", 8)(48, \"mat-select\", 16);\n        i0.ɵɵtemplate(49, UpdateUserDataComponent_mat_option_49_Template, 2, 2, \"mat-option\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(50, UpdateUserDataComponent_mat_error_50_Template, 4, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(51, \"div\", 6)(52, \"div\", 7)(53, \"mat-form-field\", 8);\n        i0.ɵɵelement(54, \"input\", 18, 19);\n        i0.ɵɵelementStart(56, \"mat-hint\", 20);\n        i0.ɵɵtext(57);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(58, \"div\", 6)(59, \"div\", 7)(60, \"mat-radio-group\", 21)(61, \"mat-radio-button\", 22);\n        i0.ɵɵtext(62, \"Male\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(63, \"mat-radio-button\", 23);\n        i0.ɵɵtext(64, \"Female\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"mat-radio-button\", 24);\n        i0.ɵɵtext(66, \"Other\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(67, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(68, \"mat-card-actions\")(69, \"button\", 25);\n        i0.ɵɵtext(70, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"button\", 26);\n        i0.ɵɵtext(72, \"Go Back\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        const _r8 = i0.ɵɵreference(55);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"formGroup\", ctx.addressForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngIf\", ctx.addressForm.controls[\"firstName\"].hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.addressForm.controls[\"lastName\"].hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addressForm.controls[\"lastName\"].hasError(\"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addressForm.controls[\"address\"].hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasUnitNumber);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.addressForm.controls[\"city\"].hasError(\"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.states);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.addressForm.controls[\"state\"].hasError(\"required\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\"\", _r8.value.length, \" / 5\");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.MaxLengthValidator, i4.MatInput, i5.MatFormField, i5.MatHint, i5.MatError, i6.MatButton, i7.MatCard, i7.MatCardActions, i7.MatCardContent, i7.MatCardHeader, i7.MatCardTitle, i8.MatRadioGroup, i8.MatRadioButton, i9.MatSelect, i10.MatOption, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\".full-width[_ngcontent-%COMP%]{width:100%}.shipping-card[_ngcontent-%COMP%]{min-width:120px;margin:20px auto}.mat-radio-button[_ngcontent-%COMP%]{display:block;margin:5px 0}.row[_ngcontent-%COMP%]{display:flex;flex-direction:row}.col[_ngcontent-%COMP%]{flex:1;margin-right:20px}.col[_ngcontent-%COMP%]:last-child{margin-right:0}\"]\n  });\n  return UpdateUserDataComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}