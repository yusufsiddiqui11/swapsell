{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let PaymentComponent = /*#__PURE__*/(() => {\n  class PaymentComponent {\n    constructor() {\n      //  @ViewChild('paypalRef',{static:true}) private paypalRef : ElementRef;\n      //  ngOnInit(): void {\n      //   console.log(window.paypal);\n      //   window.paypal.Buttons(\n      //     {\n      //       style:{\n      //         layout:'horizontal',\n      //         color:'blue',\n      //         shape:'rect',\n      //         label:'paypal'\n      //       },\n      //       createOrder:(data,actions) =>{\n      //         return actions.order.create({\n      //           purchase_units:[\n      //             {\n      //               amount : {\n      //                 value:'100',\n      //                 currency:'USD'\n      //               }\n      //             }\n      //           ]\n      //         })\n      //       },\n      //       onApprove:(data,actions)=>{\n      //         return actions.order.capture().then(details =>{\n      //           alert(\"Transaction completed\");\n      //         });\n      //       },\n      //       onError:error =>{\n      //         console.log(error);\n      //       }\n      //     } \n      //   ).render(this.paypalRef.nativeElement);\n      //   }\n      this.addScript = false;\n      this.payPalLoad = false;\n      this.finalAmount = 1;\n      this.paypalConfig = {\n        env: 'sandbox',\n        client: {\n          sandbox: 'AcFxM4s-ajIUTPv04DAmjtF2DFM0ISHZhRdQBzGaUjbdRaY6vRO-oqimrPTEXffCKe2VML5KZUkAX0yF'\n        },\n        commit: true,\n        payment: (data, actions) => {\n          return actions.payment.create({\n            payment: {\n              transactions: [{\n                amount: {\n                  total: this.finalAmount\n                }\n              }]\n            }\n          });\n        },\n        onAuthorize: (data, actios) => {\n          return actios.payment.execute().then(payment => {\n            // Do something after the payment is successfull\n          });\n        }\n      };\n    }\n    ngAfterViewChecked() {\n      if (!this.addScript) {\n        this.addPayPalScript().then(() => {\n          paypal.Button.render(this.paypalConfig, '#paypal-checkout-btn');\n          this.payPalLoad = false;\n        });\n      }\n    }\n    addPayPalScript() {\n      this.addScript = true;\n      return new Promise((resolve, reject) => {\n        let scriptTagElement = document.createElement('script');\n        scriptTagElement.src = \"http://www.paypalobjects.com/api/checkout.js\";\n        scriptTagElement.onload = resolve;\n        document.body.appendChild(scriptTagElement);\n      });\n    }\n  }\n  PaymentComponent.ɵfac = function PaymentComponent_Factory(t) {\n    return new (t || PaymentComponent)();\n  };\n  PaymentComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PaymentComponent,\n    selectors: [[\"app-payment\"]],\n    decls: 2,\n    vars: 0,\n    consts: [[\"paypalRef\", \"\"]],\n    template: function PaymentComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", null, 0);\n      }\n    }\n  });\n  return PaymentComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}